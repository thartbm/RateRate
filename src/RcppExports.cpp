// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// twoRateReachModel
DataFrame twoRateReachModel(NumericMatrix par, NumericVector schedule);
RcppExport SEXP _RateRate_twoRateReachModel(SEXP parSEXP, SEXP scheduleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type par(parSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type schedule(scheduleSEXP);
    rcpp_result_gen = Rcpp::wrap(twoRateReachModel(par, schedule));
    return rcpp_result_gen;
END_RCPP
}
// twoRateReachModelErrors
double twoRateReachModelErrors(NumericVector par, NumericVector reaches, NumericVector schedule, bool checkStability);
RcppExport SEXP _RateRate_twoRateReachModelErrors(SEXP parSEXP, SEXP reachesSEXP, SEXP scheduleSEXP, SEXP checkStabilitySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type reaches(reachesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type schedule(scheduleSEXP);
    Rcpp::traits::input_parameter< bool >::type checkStability(checkStabilitySEXP);
    rcpp_result_gen = Rcpp::wrap(twoRateReachModelErrors(par, reaches, schedule, checkStability));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RateRate_twoRateReachModel", (DL_FUNC) &_RateRate_twoRateReachModel, 2},
    {"_RateRate_twoRateReachModelErrors", (DL_FUNC) &_RateRate_twoRateReachModelErrors, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_RateRate(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
